#!/bin/bash


#copy the file including system path to the venv directory and will be excuted by venvstart file. this file contains all the flasky programe system variable.
function SYSPATHset(){	
	cp $cur_path/sources/SYSPATH .
}
#this function is defined to ask for input and if not get the yes or no input, it will ask again untill it gets one.
function askinput(){
	echo $1
	read flag
	while [[ $flag != yes ]]; do
		if [[ $flag = no ]]; then
			break
		fi
		echo $1
		read flag
	done
}
#this function is to check the ssh key is already exist. if not, it will new a key.
#if exist, it will ask if you want to new one. if yes, then you have to input the directory of the backup ssh key.if no, then it will check the ssh key already exist if it can work.
#if not exist, it will new a ssh key based on your email address. 
#after you have got your ssh key. you should new a place in github web and input the ssh key into it.
#after all, it will check if you can conecte to github.
function sshkeyset(){
	cd ~/.ssh
	if test -f "id_rsa"
	then 
		echo "ssh key already exist!"
		askinput "do you want to set a new ssh key?(yes/no)"
		if [[ flag = no ]];
		then
			echo "trying to connect github..."
			ssh -T git@github.com
			exit
		else
			echo "please input dir name to backup:"
			read pathname
			mkdir $pathname
			cp id_rsa* $pathname
			rm id_rsa*
		fi
	else 
		:
	fi
	echo "please input your email address:"
	read emailadr
	ssh-keygen -t rsa -C $emailadr
	clear
	echo "your ssh key is:"
	echo "----------------------------------"
	cat ~/.ssh/id_rsa.pub
	echo "----------------------------------"
	echo "please insert it to you github and input OK"
	read flag
	while [[ $flag != OK ]]; do
		echo "please insert it to you github and input OK"
		read flag
	done
	echo "trying to connect github..."
	ssh -T git@github.com
	cd $cur_path
}
#this function is definded to set git configrations including git name and email adress
function gitconfigset(){
	echo "please input your name:"
	read name
	echo "please input your email adress:"
	read emailadr
	gitconfig --global user.name $name
	gitconfig --global user.email $emailadr
}
#this function is set to get the github link and use it to clone the files into your input git clone path
#if the clone path you have inputed is a directory existed, then you should decide if you want to continue.
#	after all, it will get a path already existed or a path not existed.
#	if exist, flag will be yes. then it will go to the directory and clone the git file
#	if not exist, it will clone the file in the git path you have input directly
function gitclone(){
	echo "input git link:"
	read gitlink
	echo "input git clone path:"
	read gitpath
	while [[ -d $gitpath ]]; do
		askinput "path already exist,do you want to continue?(yes/no):"
		if [[ $flag = yes ]]; then
			break
		fi
		echo "input git clone path:"
		read gitpath
	done
	if [[ $flag = yes ]]; then
		echo $gitpath
		cd $gitpath
		git clone $gitlink
		cd $cur_path
	else
		git clone $gitlink $gitpath
	fi
	if [[ -d $gitpath ]]; then
		echo "git clone done!"
	else
		echo "git clone failed."
		return 1
	fi
}
#this function is set to check if the pip and virtual environment have been installed.
#if pip is not installed, you should add the Python root directory to system path
#if virtual environment is not installed, it will install virtualenv
#after that, it will ask you to new a virtual environment at a directory you input.
#after that, it will create venvstart file and syspath file. and then execute the venvstart file to start the virtual environment.
function python_virtual(){
	echo "testing pip installed or not..."
	pip --version
	if [[ $? -eq 0 ]]; then
		echo "pip has installed!"
	else 
		echo "pip not installed!"
		echo "please add Python/Scripts path to system path!"
		return 1
	fi
	echo "testing virtualenv installed or not..."
	virtualenv --version
	if [[ $? -eq 0 ]]; then
		echo "virtualenv has installed!"
	else 
		echo "virtualenv not installed!"
		echo "installing virtualenv..."
		pip install virtualenv
	fi

	echo "installing over. "
	askinput "do you want to build a new python virtual env?(no/yes):"

	if [[ $flag = no ]]; then
		return 0
	else
		c_cur_path=$(readlink -f .)
		askinput "are you sure to build venv in $c_cur_path ?(no/yes):"
		
		done
		if [[ flag = yes ]]; then
			virtualenv venv
		else
			echo "please input path:"
			read venvpath
			virtualenv $venvpath/venv
			cd $venvpath
		fi
		echo "virtual env build."
	fi
	echo "source ./venv/Scripts/activate">venvstart.sqlite
	echo "source ./venv/SYSPATH">>venvstart.sqlite
	if [[ -d venv ]]; then
		:
	else
		echo "venv not build!"
		return 1
	fi
	cd venv
	SYSPATHset
	cd ..
	source ./venvstart.sqlite
}
#this function is set to check the requirements file is exist
#if exist, it will install all the requirements in that file in the virtual environment
function requirementsinstall(){
	if [[ -f requirements.txt ]]; then
		pip install -r requirements.txt
	else
		echo "no requirements file"
	fi
}
#this is the main function of the developer to build the nessary environment for flasky to execute.
function developer(){
	#set sshkey
	askinput "do you need a sshkey?(yes/no):"
	if [[ $flag = yes ]]; then
		sshkeyset
	fi

	#set git config name and email
	askinput "do you need to set git config name and email?(yes/no):"
	if [[ $flag = yes ]]; then
		gitconfigset
	fi
	clear

	#git clone
	gitclone

	#build virtual env
	cd $gitpath
	python_virtual

	#install requirements
	requirementsinstall
	
}
case $1 in
	-h) 
		echo "./setup [-h] [-v]"
		echo "-h: help massage"
		echo "-v: build virtual environment"
		echo "-------------tips-------------"
		echo "pip freeze: list pip package"
		:;;
	-v) 
		python_virtual
		requirementsinstall
		:;;
	*)
		cur_path=$(readlink -f .)
		developer
		:;;
esac
